import { ImageResponse } from "@vercel/og";
import { NextRequest } from "next/server";

export const runtime = "edge";

// Make sure the font exists in the specified path:
const font = fetch(new URL("../../../../public/fonts/Gilroy-SemiBold/font.woff", import.meta.url)).then(
  (res) => res.arrayBuffer()
);

export async function GET(request: NextRequest) {
  try {
    const fontData = await font;

    const { searchParams } = new URL(request.url);

    const hasTitle = searchParams.has("title");
    const title = hasTitle ? searchParams.get("title")?.slice(0, 100) : "";
    const hasImage = searchParams.has("image");
    const image = hasImage ? searchParams.get("image") : "";

    return new ImageResponse(
      (
        <div
          style={{
            backgroundColor: "#333",
            backgroundSize: "150px 150px",
            height: "100%",
            width: "100%",
            display: "flex",

            alignItems: "flex-start",
            justifyContent: "center",
            flexDirection: "column",
            flexWrap: "nowrap",
          }}>
          {hasImage && (
            <img
              src={image || ""}
              alt="Image"
              style={{ position: "absolute", inset: "0", width: "100%", height: "100%", objectFit: "cover" }}
            />
          )}

          <div
            style={{
              position: "absolute",
              inset: "0",
              width: "100%",
              height: "100%",
              backgroundImage: "linear-gradient(45deg, rgb(0, 0, 0, .6), rgb(0, 0, 0,0))",
            }}></div>

          <div
            style={{
              display: "flex",
              flexDirection: "column",
              justifyContent: "space-between",
              padding: "50px 120px 70px 120px",
              height: "100%",
            }}>
            {/* <svg xmlns="http://www.w3.org/2000/svg" width="120" height="120" fill="none">
              <g fill="#fff" clip-path="url(#LogoWhite_svg__a)">
                <path d="M6.696 84.187H5.184c-.072 0-.072.072-.072.072v.216c0 1.15-.576 1.798-1.656 1.798S1.8 85.626 1.8 84.475v-3.598h4.464c.072 0 .072-.072.072-.072v-1.439c0-.072-.072-.072-.072-.072H1.8v-2.806c0-.072-.072-.072-.072-.072H.072c-.072 0-.072.072-.072.072v8.058C0 86.706 1.224 88 3.384 88s3.384-1.223 3.384-3.454v-.215c.072-.072 0-.144-.072-.144Zm34.889-5.18c-2.664 0-4.536 1.87-4.536 4.46s1.944 4.461 4.536 4.461c1.944 0 3.456-.935 4.176-2.59v-.072l-.072-.072H43.96s-.072 0-.072.072c-.432.72-1.152 1.007-2.232 1.007-1.44 0-2.448-.791-2.664-2.086h7.128c.072 0 .072-.072.072-.072v-.576c-.072-2.662-2.016-4.532-4.608-4.532Zm-2.592 3.525c.36-1.151 1.296-1.87 2.592-1.87s2.304.719 2.592 1.87h-5.184Zm18.647-3.525c-1.296 0-2.304.575-2.952 1.51-.576-1.007-1.656-1.51-2.952-1.51-2.232 0-3.527 1.438-3.527 3.813v4.82c0 .072.072.072.072.072h1.583c.072 0 .072-.072.072-.072v-4.82c0-1.367.648-2.159 1.872-2.159 1.152 0 1.872.792 1.872 2.159v4.82c0 .072.072.072.072.072h1.728c.072 0 .072-.072.072-.072v-4.82c0-1.367.72-2.159 1.872-2.159 1.224 0 1.872.792 1.872 2.159v4.82c0 .072.072.072.072.072h1.584c.072 0 .072-.072.072-.072v-4.82c.072-2.374-1.224-3.813-3.384-3.813Zm30.288 5.18h-1.584c-.072 0-.072.072-.072.072v.216c0 1.15-.576 1.798-1.656 1.798s-1.656-.647-1.656-1.798v-3.598h4.464c.072 0 .072-.072.072-.072v-1.439c0-.072-.072-.072-.072-.072H82.96v-2.806c0-.072-.072-.072-.072-.072h-1.584c-.072 0-.072.072-.072.072v8.058c0 2.159 1.224 3.454 3.384 3.454S88 86.777 88 84.546v-.215c0-.072-.072-.144-.072-.144Zm-74.422-5.18h-.936c-.576 0-1.152.143-1.656.36a4.22 4.22 0 0 0-1.368.935c-.36.36-.72.863-.936 1.367a4.265 4.265 0 0 0-.36 1.654v4.245c0 .072.072.072.072.072h1.656c.072 0 .072-.072.072-.072v-4.245c0-.36.072-.647.216-.935.144-.288.288-.576.504-.791.216-.216.504-.432.792-.504.288-.144.576-.216.936-.216h.936c.072 0 .072-.072.072-.072v-1.583c.072-.143 0-.215 0-.215Zm65.766 0h-.936c-.576 0-1.152.143-1.656.36a4.22 4.22 0 0 0-1.368.935c-.36.36-.72.863-.936 1.367a4.265 4.265 0 0 0-.36 1.654v4.245c0 .072.072.072.072.072h1.656c.072 0 .072-.072.072-.072v-4.245c0-.36.072-.647.216-.935.144-.288.288-.576.504-.791.216-.216.504-.432.792-.504.288-.144.576-.216.936-.216h.936c.072 0 .072-.072.072-.072v-1.583c.072-.143.072-.215 0-.215Zm-60.078 0c-2.664 0-4.536 1.87-4.536 4.532 0 2.878 2.16 4.39 4.32 4.39 1.367 0 2.52-.648 3.095-1.728v1.367c0 .072.072.072.072.072h1.44c.072 0 .072-.072.072-.072v-4.1c0-2.59-1.872-4.462-4.463-4.462Zm2.736 4.46c0 1.655-1.152 2.806-2.736 2.806-1.584 0-2.736-1.15-2.736-2.806 0-1.654 1.152-2.806 2.736-2.806 1.584 0 2.736 1.151 2.736 2.806Zm45.622-4.46c-2.664 0-4.536 1.87-4.536 4.532 0 2.878 2.16 4.39 4.32 4.39 1.368 0 2.52-.648 3.096-1.728v1.367c0 .072.072.072.072.072h1.44c.072 0 .072-.072.072-.072v-4.1c.072-2.59-1.8-4.462-4.464-4.462Zm2.736 4.46c0 1.655-1.152 2.806-2.736 2.806-1.584 0-2.736-1.15-2.736-2.806 0-1.654 1.152-2.806 2.736-2.806 1.584 0 2.736 1.151 2.736 2.806Zm-35.399-7.842h-1.584c-.072 0-.072.072-.072.072v4.748c-.648-.935-1.728-1.438-3.024-1.438-2.16 0-4.32 1.51-4.32 4.388 0 2.662 1.872 4.533 4.536 4.533 2.664 0 4.536-1.799 4.536-4.533v-7.698c0-.072-.072-.072-.072-.072Zm-1.728 7.842c0 1.655-1.152 2.806-2.736 2.806-1.656 0-2.736-1.15-2.736-2.806 0-1.654 1.152-2.806 2.736-2.806 1.584 0 2.736 1.151 2.736 2.806ZM50.875 33A6.856 6.856 0 0 1 44 39.875 6.856 6.856 0 0 1 37.125 33 6.856 6.856 0 0 1 44 26.125c3.812 0 6.875 3.131 6.875 6.875Zm24.75 0a6.856 6.856 0 0 1-6.875 6.875A6.856 6.856 0 0 1 61.875 33a6.856 6.856 0 0 1 6.875-6.875c3.812 0 6.875 3.131 6.875 6.875ZM50.875 8.25A6.856 6.856 0 0 1 44 15.125a6.856 6.856 0 0 1-6.875-6.875A6.856 6.856 0 0 1 44 1.375c3.812 0 6.875 3.131 6.875 6.875ZM38.5 20.625a6.856 6.856 0 0 1-6.875 6.875 6.856 6.856 0 0 1-6.875-6.875 6.856 6.856 0 0 1 6.875-6.875c3.812 0 6.875 3.131 6.875 6.875Zm0 24.75a6.856 6.856 0 0 1-6.875 6.875 6.856 6.856 0 0 1-6.875-6.875 6.856 6.856 0 0 1 6.875-6.875c3.812 0 6.875 3.131 6.875 6.875Zm24.75-24.75a6.856 6.856 0 0 1-6.875 6.875 6.856 6.856 0 0 1-6.875-6.875 6.856 6.856 0 0 1 6.875-6.875c3.812 0 6.875 3.131 6.875 6.875Zm0 24.75a6.856 6.856 0 0 1-6.875 6.875 6.856 6.856 0 0 1-6.875-6.875 6.856 6.856 0 0 1 6.875-6.875c3.812 0 6.875 3.131 6.875 6.875ZM50.875 57.75A6.856 6.856 0 0 1 44 64.625a6.856 6.856 0 0 1-6.875-6.875A6.856 6.856 0 0 1 44 50.875c3.812 0 6.875 3.131 6.875 6.875ZM26.125 33a6.856 6.856 0 0 1-6.875 6.875A6.856 6.856 0 0 1 12.375 33a6.856 6.856 0 0 1 6.875-6.875c3.812 0 6.875 3.131 6.875 6.875Z"></path>
              </g>
              <defs>
                <clipPath id="LogoWhite_svg__a">
                  <path fill="#fff" d="M0 0h88v88H0z"></path>
                </clipPath>
              </defs>
            </svg> */}
            <div style={{ display: "flex", flexDirection: "column" }}>
              <div
                style={{
                  fontSize: 56,
                  fontStyle: "normal",
                  letterSpacing: "-0.025em",
                  color: "white",
                  marginTop: 30,

                  lineHeight: 1.4,
                  whiteSpace: "pre-wrap",
                  fontFamily: '"Gilroy"',
                  fontWeight: 600,
                }}>
                {title}
              </div>
            </div>
          </div>
        </div>
      ),
      {
        width: 1200,
        height: 630,
        fonts: [
          {
            name: "Gilroy",
            data: fontData,
            style: "normal",
            weight: 600,
          },
        ],
      }
    );
  } catch (e: any) {
    console.error(`${e.message}`);
    return new Response(`Failed to generate the image`, {
      status: 500,
    });
  }
}
